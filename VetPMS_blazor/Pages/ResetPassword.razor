@page "/reset-password"

@layout ResetPasswordLayout
@inject IToastService toastService
@inject ResetPasswordService resetPassword

<h3 class="text-center border-bottom m-3 p-3" style="color:darkturquoise">Reset Password</h3>

<EditForm Model="forgetPassword" OnValidSubmit="Reset">
    <FluentValidationValidator />
    <div class="col-12 mt-5 d-flex justify-content-center">
        <div class="col-3">
            <label for="username">UserName</label>
            <InputText class="form-control" placeholder="Enter UserName" @bind-Value="forgetPassword.UserName"></InputText>
            <ValidationMessage For="@(() => forgetPassword.UserName)" />
        </div>

    </div>
    <div class="col-6 offset-4 d-flex justify-content-center">
        <button type="submit" class="btn btn-secondary mt-4" disabled="@isSubmitting" style="background-color:darkturquoise">
            @if (isSubmitting)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span>&nbsp; Sending...</span>
            }
            else
            {
                <span><i class="fas fa-key"></i>&nbsp; Send</span>
            }
        </button>
    </div>
</EditForm>

@code {
    private ResetPasswordDTO forgetPassword = new ResetPasswordDTO();

    private bool isSubmitting = false;

    private async Task Reset()
    {

        try
        {
            isSubmitting = true;
            bool result = await resetPassword.GenerateResetPasswordTokenAsync(forgetPassword);

            if (result)
            {
                forgetPassword = new ResetPasswordDTO();
                toastService.ShowSuccess("Password reset link has been sent to your email!");
            }
            else
            {
                toastService.ShowError("Error occurred while sending reset link.");
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError($"An error occurred: {ex.Message}");
        }
        finally
        {
            isSubmitting = false;
        }
    }
}
